<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="study.dao.StudentMapper">

<!--    方式一：按照查询嵌套处理
            思路：1. 查询所有的学生信息
                    2. 根据查询出来的学生的tid，寻找对应的老师 (子查询）
              -->
<!--    <resultMap id="StudentTeacher" type="study.pojo.Student">-->
<!--        <result property="id" column="id" />-->
<!--        <result property="name" column="name" />-->
<!--        复杂的属性我们需要单独处理-->
<!--        如果是对象 我们用 association
            如果是集合 我们用 collection-->
<!--        <association property="teacher" column="tid" javaType="study.pojo.Teacher" select="getTeacher"/>-->
<!--    </resultMap>-->
<!--    <select id="getStudents" resultMap="StudentTeacher">-->
<!--        select * from mybatis.student;-->
<!--    </select>-->

<!--    <select id="getTeacher" resultType="study.pojo.Teacher">-->
<!--        select * from mybatis.teacher where id=#{id}-->
<!--    </select>-->


<!--    方式二： 按照结果嵌套处理-->
    <resultMap id="StudentTeacher2" type="study.pojo.Student">
        <result property="id" column="sid"/>
        <result property="name" column="sname"/>
        <association property="teacher" javaType="study.pojo.Teacher">
            <result property="name" column="tname"/>
            <result property="id" column="tid"/>
        </association>
    </resultMap>
    <select id="getStudents" resultMap="StudentTeacher2">
        select s.id sid,s.name sname,t.name tname,t.id tid
        from mybatis.student s,mybatis.teacher t
        where s.tid=t.id;
    </select>

</mapper>